version: '3'

services:
  node:
    container_name: node
    build: .
    image: gmazur92/node
    restart: on-failure
    command: npm run start
    ports:
    - ${PORT}:${PORT}
    volumes:
    - ./src:/usr/app/src
    - ./logs:/usr/app/logs
    depends_on:
      - postgres
    environment:
      PORT: ${PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    networks:
      - net

  postgres:
    container_name: postgres
    build: ./database/
    image: gmazur92/postgres
    restart: always
    volumes:
      - ./db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - net

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - ${PGADMIN_PORT}:${PGADMIN_DEFAULT_PORT}
    volumes:
      - ./pg:/var/lib/pgadmin
    networks:
      - net
    logging:
      driver: none
networks:
  net:
    driver: bridge
